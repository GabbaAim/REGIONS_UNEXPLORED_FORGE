package net.regions_unexplored.data.worldgen.placement;

import net.minecraft.core.Holder;
import net.minecraft.data.worldgen.placement.PlacementUtils;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.levelgen.placement.*;
import net.regions_unexplored.block.RuBlocks;
import net.regions_unexplored.data.worldgen.features.RuTreeFeatures;
import net.regions_unexplored.registry.PlacedFeatureRegistry;

import java.util.List;

public class RuTreePlacements {
    //-----------------------KEYS-----------------------//
    public static final Holder<PlacedFeature> GIANT_BLUE_BIOSHROOM = PlacedFeatureRegistry.register("giant_blue_bioshroom", RuTreeFeatures.GIANT_BLUE_BIOSHROOM, List.of(CountOnEveryLayerPlacement.of(3), BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onViridescentNyliumPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GIANT_GREEN_BIOSHROOM = PlacedFeatureRegistry.register("giant_green_bioshroom", RuTreeFeatures.GIANT_GREEN_BIOSHROOM, List.of(CountOnEveryLayerPlacement.of(3), BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onViridescentNyliumPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GIANT_PINK_BIOSHROOM = PlacedFeatureRegistry.register("giant_pink_bioshroom", RuTreeFeatures.GIANT_PINK_BIOSHROOM, List.of(PlacementUtils.countExtra(1, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GIANT_YELLOW_BIOSHROOM = PlacedFeatureRegistry.register("giant_yellow_bioshroom", RuTreeFeatures.GIANT_YELLOW_BIOSHROOM, CountOnEveryLayerPlacement.of(3), PlacementUtils.filteredByBlockSurvival(Blocks.CRIMSON_ROOTS), BiomeFilter.biome());
    public static final Holder<PlacedFeature> GIANT_RED_MUSHROOM = PlacedFeatureRegistry.register("giant_red_mushroom", RuTreeFeatures.GIANT_RED_MUSHROOM, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GIANT_BROWN_MUSHROOM = PlacedFeatureRegistry.register("giant_brown_mushroom", RuTreeFeatures.GIANT_BROWN_MUSHROOM, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> ALPHA_TREE = PlacedFeatureRegistry.register("alpha_tree", RuTreeFeatures.ALPHA_OAK_TREE, List.of(CountPlacement.of(7), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> ACACIA_TREE = PlacedFeatureRegistry.register("acacia_tree", RuTreeFeatures.ACACIA_TREE, List.of(PlacementUtils.countExtra(1, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> ACACIA_TREE_SHRUB = PlacedFeatureRegistry.register("acacia_tree_shrub", RuTreeFeatures.ACACIA_TREE_SHRUB, List.of(CountPlacement.of(3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> APPLE_OAK_TREE = PlacedFeatureRegistry.register("apple_oak_tree", RuTreeFeatures.APPLE_OAK_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_APPLE_OAK_TREE = PlacedFeatureRegistry.register("big_apple_oak_tree", RuTreeFeatures.BIG_APPLE_OAK_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> ASHEN_TREE = PlacedFeatureRegistry.register("ashen_tree", RuTreeFeatures.ASHEN_TREE, List.of(CountPlacement.of(8), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING),BiomeFilter.biome()));
    public static final Holder<PlacedFeature> ASHEN_PINE_TREE = PlacedFeatureRegistry.register("ashen_pine_tree", RuTreeFeatures.ASHEN_PINE_TREE,   List.of(CountPlacement.of(10), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> BAMBOO_TREE = PlacedFeatureRegistry.register("bamboo_tree", RuTreeFeatures.BAMBOO_TREE, List.of(CountPlacement.of(15), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> MEGA_BAOBAB_TREE = PlacedFeatureRegistry.register("mega_baobab_tree", RuTreeFeatures.MEGA_BAOBAB_TREE, List.of(PlacementUtils.countExtra(2, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> ULTRA_BAOBAB_TREE = PlacedFeatureRegistry.register("ultra_baobab_tree", RuTreeFeatures.ULTRA_BAOBAB_TREE, List.of(PlacementUtils.countExtra(1, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> BRIM_WILLOW_TREE = PlacedFeatureRegistry.register("brim_willow_tree", RuTreeFeatures.BRIM_WILLOW_TREE, CountOnEveryLayerPlacement.of(2),  BiomeFilter.biome());
    public static final Holder<PlacedFeature> TALL_BRIM_WILLOW_TREE = PlacedFeatureRegistry.register("tall_brim_willow_tree", RuTreeFeatures.TALL_BRIM_WILLOW_TREE, CountOnEveryLayerPlacement.of(2),  BiomeFilter.biome());

    public static final Holder<PlacedFeature> BLACKWOOD_TREE = PlacedFeatureRegistry.register("blackwood_tree", RuTreeFeatures.BLACKWOOD_TREE, List.of(CountPlacement.of(8), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> TALL_BLACKWOOD_TREE = PlacedFeatureRegistry.register("tall_blackwood_tree", RuTreeFeatures.BIG_BLACKWOOD_TREE, List.of(CountPlacement.of(6), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> CYPRESS_TREE = PlacedFeatureRegistry.register("cypress_tree", RuTreeFeatures.CYPRESS_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(1), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GIANT_CYPRESS_TREE = PlacedFeatureRegistry.register("giant_cypress_tree", RuTreeFeatures.GIANT_CYPRESS_TREE, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(1), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GIANT_CYPRESS_TREE_DEEP = PlacedFeatureRegistry.register("giant_cypress_tree_deep", RuTreeFeatures.GIANT_CYPRESS_TREE,   List.of(CountPlacement.of(3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(2), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> COBALT_TREE = PlacedFeatureRegistry.register("cobalt_tree", RuTreeFeatures.COBALT_TREE, CountOnEveryLayerPlacement.of(1), PlacementUtils.filteredByBlockSurvival(RuBlocks.COBALT_EARLIGHT.get()),  BiomeFilter.biome());

    public static final Holder<PlacedFeature> DEAD_BOG_TREE_RARE = PlacedFeatureRegistry.register("dead_bog_tree_rare", RuTreeFeatures.DEAD_BOG_TREE, List.of(PlacementUtils.countExtra(0, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> DEAD_BOG_TREE = PlacedFeatureRegistry.register("dead_bog_tree", RuTreeFeatures.DEAD_BOG_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(2), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> DEAD_SCOTTS_PINE_TREE = PlacedFeatureRegistry.register("dead_scotts_pine_tree", RuTreeFeatures.DEAD_STRIPPED_PINE_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> DEAD_SCOTTS_PINE_TREE_MOUNTAIN = PlacedFeatureRegistry.register("dead_scotts_pine_tree_mountain", RuTreeFeatures.DEAD_STRIPPED_PINE_TREE_MOUNTAIN, List.of(PlacementUtils.countExtra(0, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> DEAD_SCOTTS_PINE_TREE_MOUNTAIN_ON_SNOW = PlacedFeatureRegistry.register("dead_scotts_pine_tree_mountain_on_snow", RuTreeFeatures.DEAD_STRIPPED_PINE_TREE_MOUNTAIN, List.of(PlacementUtils.countExtra(0, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onSnowPredicate), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> BIRCH_TREE_ASPEN = PlacedFeatureRegistry.register("birch_tree_aspen", RuTreeFeatures.BIRCH_TREE_ASPEN, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> TALL_DARK_OAK = PlacedFeatureRegistry.register("tall_dark_oak", RuTreeFeatures.TALL_DARK_OAK, List.of(CountPlacement.of(7), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> SMALL_EUCALYPTUS_TREE = PlacedFeatureRegistry.register("small_eucalyptus_tree", RuTreeFeatures.SMALL_EUCALYPTUS_TREE, List.of(CountPlacement.of(9), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> EUCALYPTUS_TREE = PlacedFeatureRegistry.register("eucalyptus_tree", RuTreeFeatures.EUCALYPTUS_TREE, List.of(CountPlacement.of(9), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> LARGE_JOSHUA_TREE = PlacedFeatureRegistry.register("large_joshua_tree", RuTreeFeatures.LARGE_JOSHUA_TREE, List.of(PlacementUtils.countExtra(0, 0.1F, 3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(RuBlocks.SMALL_DESERT_SHRUB.get()), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> MEDIUM_JOSHUA_TREE = PlacedFeatureRegistry.register("medium_joshua_tree", RuTreeFeatures.MEDIUM_JOSHUA_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(RuBlocks.SMALL_DESERT_SHRUB.get()), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> JOSHUA_TREE_SHRUB = PlacedFeatureRegistry.register("joshua_tree_shrub", RuTreeFeatures.JOSHUA_TREE_SHRUB, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(RuBlocks.SMALL_DESERT_SHRUB.get()), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> JUNGLE_TREE_SPARSE = PlacedFeatureRegistry.register("jungle_tree_sparse", RuTreeFeatures.JUNGLE_TREE, List.of(NoiseBasedCountPlacement.of(2, 55.0D, 0.0D), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_JUNGLE_TREE_SPARSE = PlacedFeatureRegistry.register("big_jungle_tree_sparse", RuTreeFeatures.BIG_JUNGLE_TREE, List.of(NoiseBasedCountPlacement.of(2, 50.0D, 0.0D), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> JUNGLE_TREE_DENSE = PlacedFeatureRegistry.register("jungle_tree_dense", RuTreeFeatures.JUNGLE_TREE, List.of(CountPlacement.of(12), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_JUNGLE_TREE_DENSE = PlacedFeatureRegistry.register("big_jungle_tree_dense", RuTreeFeatures.BIG_JUNGLE_TREE, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> KAPOK_TREE_SPARSE = PlacedFeatureRegistry.register("kapok_tree_sparse", RuTreeFeatures.KAPOK_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> KAPOK_TREE_DENSE = PlacedFeatureRegistry.register("kapok_tree_dense", RuTreeFeatures.KAPOK_TREE, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> LARCH_TREE_SPARSE = PlacedFeatureRegistry.register("larch_tree_sparse", RuTreeFeatures.LARCH_TREE, List.of(CountPlacement.of(7), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> LARCH_TREE_DENSE = PlacedFeatureRegistry.register("larch_tree_dense", RuTreeFeatures.LARCH_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GOLDEN_LARCH_TREE_SPARSE = PlacedFeatureRegistry.register("golden_larch_tree_sparse", RuTreeFeatures.GOLDEN_LARCH_TREE, List.of(CountPlacement.of(7), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GOLDEN_LARCH_TREE_DENSE = PlacedFeatureRegistry.register("golden_larch_tree_dense", RuTreeFeatures.GOLDEN_LARCH_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> MAPLE_TREE_DENSE = PlacedFeatureRegistry.register("maple_tree_dense", RuTreeFeatures.MAPLE_TREE, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> MAPLE_TREE_SPARSE = PlacedFeatureRegistry.register("maple_tree_sparse", RuTreeFeatures.MAPLE_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> RED_MAPLE_TREE_SPARSE = PlacedFeatureRegistry.register("red_maple_tree_sparse", RuTreeFeatures.RED_MAPLE_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_MAPLE_TREE_SPARSE = PlacedFeatureRegistry.register("big_maple_tree_sparse", RuTreeFeatures.BIG_MAPLE_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_RED_MAPLE_TREE_SPARSE = PlacedFeatureRegistry.register("big_red_maple_tree_sparse", RuTreeFeatures.BIG_RED_MAPLE_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> BIG_MAPLE_TREE_ON_GRASS = PlacedFeatureRegistry.register("big_maple_tree_on_grass", RuTreeFeatures.BIG_MAPLE_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onGrassBlockPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_ORANGE_MAPLE_TREE_ON_GRASS = PlacedFeatureRegistry.register("big_orange_maple_tree_on_grass", RuTreeFeatures.BIG_ORANGE_MAPLE_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onGrassBlockPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_RED_MAPLE_TREE_ON_GRASS = PlacedFeatureRegistry.register("big_red_maple_tree_on_grass", RuTreeFeatures.BIG_RED_MAPLE_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onGrassBlockPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> MAPLE_TREE_ON_GRASS = PlacedFeatureRegistry.register("maple_tree_on_grass", RuTreeFeatures.MAPLE_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onGrassBlockPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> ORANGE_MAPLE_TREE_ON_GRASS = PlacedFeatureRegistry.register("orange_maple_tree_on_grass", RuTreeFeatures.ORANGE_MAPLE_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onGrassBlockPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> RED_MAPLE_TREE_ON_GRASS = PlacedFeatureRegistry.register("red_maple_tree_on_grass", RuTreeFeatures.RED_MAPLE_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onGrassBlockPredicate), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> MAUVE_TREE_MEADOW = PlacedFeatureRegistry.register("mauve_tree_meadow", RuTreeFeatures.MAUVE_OAK, NoiseBasedCountPlacement.of(70, 25.0D, -0.7D), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome());
    public static final Holder<PlacedFeature> MAUVE_TREE_SPARSE = PlacedFeatureRegistry.register("mauve_tree_sparse", RuTreeFeatures.MAUVE_OAK,   List.of(PlacementUtils.countExtra(0, 0.1F, 2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> MAUVE_TREE_DENSE = PlacedFeatureRegistry.register("mauve_tree_dense", RuTreeFeatures.MAUVE_OAK, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_MAUVE_TREE = PlacedFeatureRegistry.register("big_mauve_tree", RuTreeFeatures.BIG_MAUVE_OAK, List.of(CountPlacement.of(3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> BIG_OAK_TREE_DENSE = PlacedFeatureRegistry.register("big_oak_tree_dense", RuTreeFeatures.BIG_OAK_TREE, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_OAK_TREE_SPARSE = PlacedFeatureRegistry.register("big_oak_tree_sparse", RuTreeFeatures.BIG_OAK_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_BUSH_DENSE = PlacedFeatureRegistry.register("oak_bush_dense", RuTreeFeatures.OAK_BUSH, List.of(CountPlacement.of(8), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_BUSH_SINGLE = PlacedFeatureRegistry.register("oak_bush_single", RuTreeFeatures.OAK_BUSH, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_BUSH_SPARSE = PlacedFeatureRegistry.register("oak_bush_sparse", RuTreeFeatures.OAK_BUSH, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_BUSH_WITH_FLOWERS_DENSE = PlacedFeatureRegistry.register("oak_bush_with_flowers_dense", RuTreeFeatures.OAK_BUSH_WITH_FLOWERS, List.of(CountPlacement.of(7), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_BUSH_WITH_FLOWERS_SPARSE = PlacedFeatureRegistry.register("oak_bush_with_flowers_sparse", RuTreeFeatures.OAK_BUSH_WITH_FLOWERS, List.of(CountPlacement.of(3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_TREE_ON_DIRT= PlacedFeatureRegistry.register("oak_tree_on_dirt", RuTreeFeatures.OAK_TREE, List.of(CountPlacement.of(3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onDirtPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_TREE_SHRUB_DENSE = PlacedFeatureRegistry.register("oak_tree_shrub_dense", RuTreeFeatures.OAK_TREE_SHRUB, List.of(CountPlacement.of(3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_TREE_SHRUB_ON_STONE= PlacedFeatureRegistry.register("oak_tree_shrub_on_stone", RuTreeFeatures.OAK_TREE_SHRUB, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(RuBlocks.STONE_BUD.get()), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_TREE_SHRUB_SPARSE = PlacedFeatureRegistry.register("oak_tree_shrub_sparse", RuTreeFeatures.OAK_TREE_SHRUB, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_TREE_TALL = PlacedFeatureRegistry.register("oak_tree_tall", RuTreeFeatures.OAK_TREE_TALL, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> OAK_TREE_WITH_BRANCH = PlacedFeatureRegistry.register("oak_tree_with_branch", RuTreeFeatures.OAK_TREE_WITH_BRANCH, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SMALL_OAK_TREE = PlacedFeatureRegistry.register("small_oak_tree", RuTreeFeatures.SMALL_OAK_TREE, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> PALM_TREE_ON_SAND = PlacedFeatureRegistry.register("palm_tree_on_sand", RuTreeFeatures.PALM_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(RuBlocks.SANDY_GRASS.get()), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PALM_TREE_SPARSE = PlacedFeatureRegistry.register("palm_tree_sparse", RuTreeFeatures.PALM_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PALM_TREE_DENSE = PlacedFeatureRegistry.register("palm_tree_dense", RuTreeFeatures.PALM_TREE, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PALM_TREE_DENSE_TALL = PlacedFeatureRegistry.register("palm_tree_dense_tall", RuTreeFeatures.TALL_PALM_TREE, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PALM_TREE_SHRUB = PlacedFeatureRegistry.register("palm_tree_shrub", RuTreeFeatures.PALM_TREE_SHRUB, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> PINE_TREE = PlacedFeatureRegistry.register("pine_tree", RuTreeFeatures.PINE_TREE, List.of(CountPlacement.of(6), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PINE_TREE_ON_DIRT = PlacedFeatureRegistry.register("pine_tree_on_dirt", RuTreeFeatures.PINE_TREE, List.of(CountPlacement.of(13), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onDirtPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PINE_TREE_SHRUB_ON_GRASS = PlacedFeatureRegistry.register("pine_tree_shrub_on_grass", RuTreeFeatures.PINE_TREE_SHRUB, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onGrassBlockPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PINE_TREE_SHRUB_ON_SNOW = PlacedFeatureRegistry.register("pine_tree_shrub_on_snow", RuTreeFeatures.PINE_TREE_SHRUB, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onSnowPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PINE_TREE_SHRUB_ON_SNOW_SPARSE = PlacedFeatureRegistry.register("pine_tree_shrub_on_snow_sparse", RuTreeFeatures.PINE_TREE_SHRUB, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onSnowPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PINE_TREE_TALL_ON_DIRT = PlacedFeatureRegistry.register("pine_tree_tall_on_dirt", RuTreeFeatures.PINE_TREE_TALL, List.of(CountPlacement.of(5), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onDirtPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SCOTTS_PINE_TREE_MOUNTAIN = PlacedFeatureRegistry.register("scotts_pine_tree_mountain", RuTreeFeatures.STRIPPED_PINE_TREE_MOUNTAIN, List.of(PlacementUtils.countExtra(2, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SCOTTS_PINE_TREE_MOUNTAIN_ON_SNOW = PlacedFeatureRegistry.register("scotts_pine_tree_mountain_on_snow", RuTreeFeatures.STRIPPED_PINE_TREE_MOUNTAIN, List.of(PlacementUtils.countExtra(2, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onSnowPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SCOTTS_PINE_TREE_ON_DIRT = PlacedFeatureRegistry.register("scotts_pine_tree_on_dirt", RuTreeFeatures.STRIPPED_PINE_TREE, List.of(CountPlacement.of(11), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onDirtPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SCOTTS_PINE_TREE_ON_SNOW = PlacedFeatureRegistry.register("scotts_pine_tree_on_snow", RuTreeFeatures.STRIPPED_PINE_TREE, List.of(CountPlacement.of(9), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onSnowPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SCOTTS_PINE_TREE_TALL_ON_SNOW = PlacedFeatureRegistry.register("scotts_pine_tree_tall_on_snow", RuTreeFeatures.STRIPPED_PINE_TREE_TALL, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onSnowPredicate), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> LUSH_PINE_TREE = PlacedFeatureRegistry.register("lush_pine_tree", RuTreeFeatures.LUSH_PINE_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> ULTRA_REDWOOD_TREE = PlacedFeatureRegistry.register("ultra_redwood_tree", RuTreeFeatures.ULTRA_REDWOOD_TREE, List.of(NoiseBasedCountPlacement.of(1, 80.0D, 0.3D), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GIANT_REDWOOD_TREE_DENSE = PlacedFeatureRegistry.register("giant_redwood_tree_dense", RuTreeFeatures.GIANT_REDWOOD_TREE, List.of(CountPlacement.of(6), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> GIANT_REDWOOD_TREE_SPARSE = PlacedFeatureRegistry.register("giant_redwood_tree_sparse", RuTreeFeatures.GIANT_REDWOOD_TREE, List.of(NoiseBasedCountPlacement.of(1, 80.0D, 0.3D), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> REDWOOD_TREE = PlacedFeatureRegistry.register("redwood_tree", RuTreeFeatures.REDWOOD_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> MAGNOLIA_TREE = PlacedFeatureRegistry.register("magnolia_tree", RuTreeFeatures.MAGNOLIA_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BLUE_MAGNOLIA_TREE = PlacedFeatureRegistry.register("blue_magnolia_tree", RuTreeFeatures.BLUE_MAGNOLIA_TREE, List.of(PlacementUtils.countExtra(1, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> PINK_MAGNOLIA_TREE = PlacedFeatureRegistry.register("pink_magnolia_tree", RuTreeFeatures.PINK_MAGNOLIA_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> WHITE_MAGNOLIA_TREE = PlacedFeatureRegistry.register("white_magnolia_tree", RuTreeFeatures.WHITE_MAGNOLIA_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_MAGNOLIA_TREE = PlacedFeatureRegistry.register("big_magnolia_tree", RuTreeFeatures.BIG_MAGNOLIA_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_PINK_MAGNOLIA_TREE = PlacedFeatureRegistry.register("big_pink_magnolia_tree", RuTreeFeatures.BIG_PINK_MAGNOLIA_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_WHITE_MAGNOLIA_TREE = PlacedFeatureRegistry.register("big_white_magnolia_tree", RuTreeFeatures.BIG_WHITE_MAGNOLIA_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> SAGUARO_CACTUS = PlacedFeatureRegistry.register("saguaro_cactus", RuTreeFeatures.SAGUARO_CACTUS, List.of(NoiseBasedCountPlacement.of(1, 75.0D, 0.0D), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(RuBlocks.SANDY_GRASS.get()), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> SILVER_BIRCH_DENSE = PlacedFeatureRegistry.register("silver_birch_dense", RuTreeFeatures.SILVER_BIRCH_TREE, List.of(CountPlacement.of(6), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SILVER_BIRCH_SPARSE = PlacedFeatureRegistry.register("silver_birch_sparse", RuTreeFeatures.SILVER_BIRCH_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SILVER_BIRCH_ON_DIRT = PlacedFeatureRegistry.register("silver_birch_on_dirt", RuTreeFeatures.SILVER_BIRCH_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onDirtPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SILVER_BIRCH_ON_GRASS = PlacedFeatureRegistry.register("silver_birch_on_grass", RuTreeFeatures.SILVER_BIRCH_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onGrassBlockPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SILVER_BIRCH_TALL = PlacedFeatureRegistry.register("silver_birch_tall", RuTreeFeatures.SILVER_BIRCH_TREE_TALL, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> LARGE_SOCOTRA_TREE = PlacedFeatureRegistry.register("large_socotra_tree", RuTreeFeatures.LARGE_SOCOTRA_TREE, List.of(NoiseBasedCountPlacement.of(1, 70.0D, 0.0D), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SMALL_SOCOTRA_TREE = PlacedFeatureRegistry.register("small_socotra_tree", RuTreeFeatures.SMALL_SOCOTRA_TREE, List.of(PlacementUtils.countExtra(1, 0.1F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> ENCHANTED_BIRCH = PlacedFeatureRegistry.register("enchanted_birch", RuTreeFeatures.ENCHANTED_BIRCH_TREE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> ENCHANTED_BIRCH_TALL = PlacedFeatureRegistry.register("enchanted_birch_tall", RuTreeFeatures.ENCHANTED_BIRCH_TREE_TALL, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> SPRUCE_TREE_TALL_SPARSE = PlacedFeatureRegistry.register("spruce_tree_tall_sparse", RuTreeFeatures.SPRUCE_TREE_TALL, List.of(PlacementUtils.countExtra(0, 0.05F, 1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.SPRUCE_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SPRUCE_TREE_TALL_DENSE = PlacedFeatureRegistry.register("spruce_tree_tall_dense", RuTreeFeatures.SPRUCE_TREE_TALL, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SPRUCE_TREE_TALL_ON_SNOW = PlacedFeatureRegistry.register("spruce_tree_tall_on_snow", RuTreeFeatures.SPRUCE_TREE_TALL, List.of(CountPlacement.of(4), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onSnowPredicate), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> SPRUCE_TREE_SHRUB_DENSE = PlacedFeatureRegistry.register("spruce_tree_shrub_dense", RuTreeFeatures.SPRUCE_TREE_SHRUB, List.of(CountPlacement.of(3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> ICE_SPIRE = PlacedFeatureRegistry.register("ice_spire", RuTreeFeatures.ICE_SPIRE, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, BlockPredicateFilter.forPredicate(PlacedFeatureRegistry.onSnowPredicate), BiomeFilter.biome()));

    public static final Holder<PlacedFeature> WILLOW_TREE = PlacedFeatureRegistry.register("willow_tree", RuTreeFeatures.WILLOW_TREE, List.of(CountPlacement.of(1), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> BIG_WILLOW_TREE = PlacedFeatureRegistry.register("big_willow_tree", RuTreeFeatures.BIG_WILLOW_TREE, List.of(CountPlacement.of(3), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(0), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
    public static final Holder<PlacedFeature> WILLOW_TREE_VINES = PlacedFeatureRegistry.register("willow_tree_vines", RuTreeFeatures.WILLOW_TREE_VINES, List.of(CountPlacement.of(2), InSquarePlacement.spread(), SurfaceWaterDepthFilter.forMaxDepth(3), PlacementUtils.HEIGHTMAP_OCEAN_FLOOR, PlacementUtils.filteredByBlockSurvival(Blocks.OAK_SAPLING), BiomeFilter.biome()));
}